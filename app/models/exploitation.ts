import { DateTime } from 'luxon'
import { BaseModel, beforeCreate, column, manyToMany } from '@adonisjs/lucid/orm'
import ExploitationTag from '#models/exploitation_tag'
import type { ManyToMany } from '@adonisjs/lucid/types/relations'
import { randomUUID } from 'node:crypto'

export const ExploitationTypeStructure = {
  GAEC: 'GAEC',
  EARL: 'EARL',
  SARL: 'SARL',
  SAS: 'SAS',
  SCEA: 'SCEA',
  EI: 'EI',
} as const

export type ExploitationTypeStructure =
  (typeof ExploitationTypeStructure)[keyof typeof ExploitationTypeStructure]

export const ExploitationTagRelationTable = 'exploitation_tag_relations'

export default class Exploitation extends BaseModel {
  static table = 'exploitations'
  // Disable primary key generation by the DB
  static selfAssignPrimaryKey = true

  @column({ isPrimary: true })
  declare id: string

  // Auto-generate UUID before DB insertion
  @beforeCreate()
  static assignUuid(exploitation: Exploitation) {
    exploitation.id = randomUUID()
  }

  @column()
  declare name: string

  @column()
  declare type_structure: ExploitationTypeStructure

  @column()
  declare siret: string | null

  @column()
  declare address: string

  @column()
  declare postal_code: string

  @column()
  declare commune_insee: string

  @column()
  declare notes: string | null

  // You will probably want to also filter by userId on the tags' model
  @manyToMany(() => ExploitationTag, {
    pivotTable: ExploitationTagRelationTable,
    pivotTimestamps: true,
  })
  declare tags: ManyToMany<typeof ExploitationTag>

  @column.dateTime({ autoCreate: true })
  declare createdAt: DateTime

  @column.dateTime({ autoCreate: true, autoUpdate: true })
  declare updatedAt: DateTime
}
