name: Default CI

on:
  push:
    branches: [ "main", "feat/ci" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ci
    env:
      APP_KEY: ${{ vars.APP_KEY }}
      DB_HOST: ${{ vars.DB_HOST }}
      DB_PASSWORD: ${{ vars.DB_PASSWORD }}
      DB_PORT: ${{ vars.DB_PORT }}
      HOST: ${{ vars.HOST }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}
      SESSION_DRIVER: ${{ vars.SESSION_DRIVER }}

    strategy:
      matrix:
        node-version: [ 22.x ]

    services:
      postgres:
        image: postgres:18-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run test

  build:
    runs-on: ubuntu-latest
    environment: ci

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build
